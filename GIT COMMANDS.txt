Initialize a new Git repository:
-git init

Clone an existing repository:
-git clone <repository-url>

Check repository status:
-git status

Add files to staging area:
-git add <file>           # Add specific file
-git add .                # Add all files

Commit changes:
-git commit -m "commit message"

View commit history:
-git log
-git log --oneline        # Compact view

Create a new branch:
-git branch <branch-name>

List all branches:
-git branch

Switch to a branch:
-git checkout <branch-name>

Create and switch to a new branch:
-git checkout -b <branch-name>


Merge a branch into the current branch:
- git merge <branch-name>


Delete a branch:
-git branch -d <branch-name>      # Delete merged branch
-git branch -D <branch-name>      # Force delete

Add a remote repository:
-git remote add <name> <repository-url>

View remotes:
-git remote -v

Fetch changes from a remote:
-git fetch <remote>


Push changes to a remote:
-git push <remote> <branch-name>

Pull changes from a remote:
-git pull <remote> <branch-name>


Push all branches to a remote:
-git push --all <remote>

Push tags to a remote:
-git push --tags

Save uncommitted changes (stash):
-git stash

List stashes:
-git stash list

Apply the most recent stash:
-git stash apply


Apply a specific stash:
-git stash apply stash@{index}


Drop the most recent stash:
-git stash drop


Drop a specific stash:
-git stash drop stash@{index}


Pop (apply and remove) the most recent stash:
-git stash pop

Create a new tag:
-git tag <tag-name>

List all tags:
-git tag

Delete a tag:
-git tag -d <tag-name>

Push tags to remote:
-git push origin <tag-name>
-git push --tags       # Push all tags

Undo changes to a file (unstage):
-git restore --staged <file>

Discard changes in a file (reset to last commit):
-git restore <file>

Revert a specific commit:
-git revert <commit-hash>

Reset the current branch to a specific commit:
-git reset --hard <commit-hash>

Remove a file from Git (but keep it locally):
-git rm --cached <file>

Amend the last commit:
-git commit --amend


Set global username:
-git config --global user.name "Your Name"

Set global email:
-git config --global user.email "your.email@example.com"

Set a global editor:
-git config --global core.editor <editor>

View Git configuration:
-git config --list


Rebase the current branch on another branch:
-git rebase <branch>

Interactive rebase (useful for squashing commits):
-git rebase -i <base-branch>


























